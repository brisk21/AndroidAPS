name: Build AAPS
on: [workflow_dispatch]  # 手动触发

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'  # 正确的发行版，'test' 是无效值
          java-version: '11'
          cache: 'gradle'  # 可选：缓存 Gradle 提升构建速度

      - name: Decode Keystore
        run: |
          echo "${{ secrets.STORE_FILE }}" | base64 -d > app/aaps.keystore
        # 更简洁写法：直接管道处理，避免中间文件

      - name: Build Release APK
        working-directory: .  # 可省略，因为根目录
        run: |
          chmod +x gradlew
          ./gradlew assembleRelease \
            -Pandroid.injected.signing.store.file=app/aaps.keystore \
            -Pandroid.injected.signing.store.password=${{ secrets.STORE_PASSWORD }} \
            -Pandroid.injected.signing.key.alias=${{ secrets.KEY_ALIAS }} \
            -Pandroid.injected.signing.key.password=${{ secrets.KEY_PASSWORD }}
        env:
          # 避免敏感信息出现在命令行日志中（可选）
          STORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}

      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: aaps-release-apk
          path: app/build/outputs/apk/release/*.apk
          if-no-files-found: error  # 如果没找到 APK 报错
